@use 'sass:math';

.body-text {
  .btn {
    font-size: #{math.div($button-font-size, $body-text-font-size)}em;
  }
}

.btn-content {
  padding: 0;
  background: transparent;
  border-width: 0;
  font-size: inherit;
  color: inherit;
  font-family: inherit;
  font-weight: inherit;
  &:focus,
  &:active {
    outline: none;
  }
}

@mixin button-text() {
  font-size: $button-font-size;
  letter-spacing: $button-letter-spacing;
  text-transform: $button-text-transform;
  font-family: $button-font-family;
  font-weight: $button-font-weight;
}

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $button-border-width solid transparent;
  border-radius: $button-border-radius;
  height: $button-height;
  padding: 0 $button-padding-x;
  text-decoration: none;
  @include button-text();
  &:focus,
  &.focus {
    outline: 0;
  }
  &.disabled,
  &:disabled {
    opacity: 0.5;
  }
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-image: none;
    &:focus {
      // @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }

  .spin {
    text-align: left;
  }

  svg {
    margin-right: $button-padding-x - 2px;
    vertical-align: middle;
    height: $spacer-lg;
    width: auto;
    fill: #fff;
    &.button-right {
      margin-right: 0;
      margin-left: $button-padding-x - 2px;
    }
  }
  svg .tick {
    width: 22px;
  }
  &.btn-lg svg {
    height: $spacer-lg + $spacer-md;
  }
  &.btn-lc {
    text-transform: none;
    letter-spacing: 0;
  }
  .spinner:not(.on) {
    display: none;
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

// Button colours
@each $color, $value in $button-theme-colors {
  .btn-#{$color} {
    @include button-variant($value);
    cursor: pointer;
    &.flashing {
      animation: btn-flashing-#{$color} 3s infinite;
      -webkit-animation: btn-flashing-#{$color} 3s infinite;
      svg {
        animation: btn-flashing-svg-#{$color} 3s infinite;
        -webkit-animation: btn-flashing-svg-#{$color} 3s infinite;
      }
    }
  }
  @keyframes btn-flashing-#{$color} {
    0% {
      background-color: $value;
      color: #fff;
    }
    50% {
      background-color: #fff;
      color: $value;
    }
    100% {
      background-color: $value;
      color: #fff;
    }
  }

  @-webkit-keyframes btn-flashing-#{$color} {
    0% {
      background-color: $value;
      color: #fff;
    }
    50% {
      background-color: #fff;
      color: $value;
    }
    100% {
      background-color: $value;
      color: #fff;
    }
  }

  @keyframes btn-flashing-svg-#{$color} {
    0% {
      fill: #fff;
    }
    50% {
      fill: $value;
    }
    100% {
      fill: #fff;
    }
  }

  @-webkit-keyframes btn-flashing-svg-#{$color} {
    0% {
      fill: #fff;
    }
    50% {
      fill: $value;
    }
    100% {
      fill: #fff;
    }
  }
}

@each $color, $value in $button-theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
    &.flashing {
      animation: btn-outline-flashing-#{$color} 3s infinite;
      -webkit-animation: btn-outline-flashing-#{$color} 3s infinite;
      svg {
        animation: btn-outline-flashing-svg-#{$color} 3s infinite;
        -webkit-animation: btn-outline-flashing-svg-#{$color} 3s infinite;
      }
    }
  }
  @keyframes btn-outline-flashing-#{$color} {
    0% {
      background-color: #fff;
      color: $value;
    }
    50% {
      background-color: $value;
      color: #fff;
    }
    100% {
      background-color: #fff;
      color: $value;
    }
  }

  @-webkit-keyframes btn-outline-flashing-#{$color} {
    0% {
      background-color: #fff;
      color: $value;
      fill: $value;
    }
    50% {
      background-color: $value;
      color: #fff;
      fill: #fff;
    }
    100% {
      background-color: #fff;
      color: $value;
      fill: $value;
    }
  }

  @keyframes btn-outline-flashing-svg-#{$color} {
    0% {
      fill: $value;
    }
    50% {
      fill: #fff;
    }
    100% {
      fill: $value;
    }
  }

  @-webkit-keyframes btn-outline-flashing-svg-#{$color} {
    0% {
      fill: $value;
    }
    50% {
      fill: #fff;
    }
    100% {
      fill: $value;
    }
  }
}

.btn-outline-white {
  background: transparent;
  color: #fff;
  border-color: #fff;
}

// Make a button look and behave like a link
.btn-link {
  font-weight: $link-font-weight;
  color: $link-color;
  text-transform: none;
  background-color: transparent;
  letter-spacing: initial;
  &:hover {
    color: $link-hover-color;
    text-decoration: $link-hover-text-decoration;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-text-decoration;
    border-color: transparent;
  }

  &:disabled,
  &.disabled {
    opacity: 1;
    color: $button-link-disabled-color;
  }

  // No need for an active state here
}

.body-text {
  .btn-link {
    font-size: inherit;
  }
}

.close-button {
  width: 22px;
  height: 22px;
  border-radius: 50%;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border-width: 0;
}
.close-button svg {
  height: 18px;
  width: 18px;
  padding: 3px;
  fill: #bbb;
  margin-right: 0;
}

.close-button:hover {
  cursor: pointer;
  background: #bbb;
}
.close-button:hover svg {
  fill: #fff;
}

.btn-lg {
  height: $button-height + 10px;
}

.btn-sm {
  height: $button-height - 10px;
}

.btn-block {
  display: flex;
  width: 100%;
  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: 15px;
  }
}

// Specificity overrides
input[type='submit'],
input[type='reset'],
input[type='button'] {
  &.btn-block {
    width: 100%;
  }
}
